dist: trusty
language: php

cache:
  directories:
    - $HOME/.composer/cache/files

env:
  global:
    - VARNISH_VERSION=5.1
    - SYMFONY_PHPUNIT_VERSION=8
    - SYMFONY_DEPRECATIONS_HELPER="max[self]=0"
    - DEPENDENCIES="toflar/psr6-symfony-http-cache-store:^2.2.0\|^3.0.0"

matrix:
  fast_finish: true
  include:
      # PHP 8.0 (Travis does not yet support using the stable 8.0.0)
    - php: nightly
      dist: xenial
      env: SYMFONY_PHPUNIT_VERSION=8

branches:
  only:
    - master
    # Build maintenance branches for older releases if needed. such branches should be named like "1.2"
    - '/^\d+\.\d+$/'

before_install:
    - if [[ $COVERAGE != true ]]; then phpenv config-rm xdebug.ini || true; fi
    - if ! [ -z "$STABILITY" ]; then composer config minimum-stability ${STABILITY}; fi;
    - if ! [ -z "$DEPENDENCIES" ]; then composer require --no-update ${DEPENDENCIES}; echo ${DEPENDENCIES}; fi;
    - if ! [ -z "$SYMFONY_VERSION" ]; then composer config extra.symfony.require ${SYMFONY_VERSION}; fi;

install:
  - composer update $COMPOSER_FLAGS --prefer-dist --no-interaction

before_script:
  # Install Varnish
  - |
    set -e
    curl -L https://packagecloud.io/varnishcache/varnish${VARNISH_VERSION//./}/gpgkey | sudo apt-key add -
    curl -L "https://packagecloud.io/install/repositories/varnishcache/varnish${VARNISH_VERSION//./}/config_file.list?os=ubuntu&dist=trusty&source=script" | sudo tee -a /etc/apt/sources.list
    cat /etc/apt/sources.list
    sudo apt-get update -qq
    sudo apt-get install -qq varnish
  - if [ "$DOCCHECK" = true ]; then sudo apt-get install -qq python-sphinx enchant; fi
  - if [ "$DOCCHECK" = true ]; then sudo pip install -r doc/requirements.txt; fi
  - if [ "$VARNISH_MODULES_VERSION" != "" ]; then sh ./tests/install-varnish-modules.sh; fi
  # Install NGINX
  - sh ./tests/install-nginx.sh

script:
  - composer validate --strict --no-check-lock
  - vendor/bin/simple-phpunit $PHPUNIT_FLAGS tests/Functional/Varnish/MaxAgeTest.php
  - if [[ "$DOCCHECK" = true ]]; then make -C doc SPHINXOPTS='-nW' html; fi
  - if [[ "$DOCCHECK" = true ]]; then make -C doc spelling; fi

after_script:
  - if [[ $COVERAGE = true ]]; then wget https://scrutinizer-ci.com/ocular.phar && php ocular.phar code-coverage:upload --format=php-clover coverage.clover; fi

after_failure:
  - cat /tmp/fos_nginx_error.log
  - cat /tmp/fos_nginx_access.log
  - sudo cat /var/log/apache2/error.log
  - sudo cat /var/log/apache2/access.log
  - sudo cat /var/log/apache2/other_vhosts_access.log
